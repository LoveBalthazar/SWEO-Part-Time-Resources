html, body, div {
    /* PAGE SETTINGS - DO NOT EDIT */
    font-family: sans-serif;
    background-color: antiquewhite;
    padding: 20px;
}

/* ====== */

.grid-container {
    text-align: center;

    /* Phase 1 */
    /* Your code here */
    /* if we have inline-grid, our grid container will shhrink to the width size of the content. */

    /* sizing measurements priority: px, auto, %, fr 
        -> pixel is the least flexible since we cannot change it if we give a column a static width of 300px 
        -> auto = width of parent is the size of the content
    */

    /* tells our container to be a grid css */
    display: grid;

    /* determine the size of our columns and rows */
    grid-template-columns: 3fr auto 1fr;
    grid-template-rows: auto; /* auto is the default */

    /* we want to layout the structure of how our grid should look like */
    grid-template-areas: 
    "header header header"
    "main . sidebar"
    "footer footer footer";

    /* Bonus Phase */
    /* Your code here */
    grid-row-gap: 10px;
    
}
.item-1 {
    background-color: #87a7b3; /* steel blue */

    /* label the grid item to map to what we want */
    grid-area: header;
    /* Phase 1 */
    /* Your code here */
}
.item-2 {
    background-color: #e1f1dd; /* light sea green */

    /* Phase 1 */
    grid-area: main;
    /* Your code here */
}
.item-3 {
    background-color: #cdc7be; /* grey */

    /* Phase 1 */
    grid-area: sidebar;
    /* Your code here */
}
.item-4 {
    background-color: #766161; /* brown */
    color: antiquewhite;

    /* Phase 1 */
    grid-area: footer;
    /* Your code here */
}

.divider {
    background-image: linear-gradient(to right, #e1f1dd, #cdc7be);

    /* Bonus Phase */
    /* Your code here */
}

/* ====== */

.grid-container-flow {
    border: solid #87a7b3 2px;
    margin: 20px;

    /* Phase 2 */
    display: inline-grid;
    /* Your code here */


    grid-template-columns: repeat(6, 100px);
    grid-template-rows: repeat(3, 50px);
    grid-auto-flow: row;

    /* we need center our grid items to be in the center of their cells */
    justify-items: center;
    align-items: center;
}